  var SPHERE_DIV = 30;

  var i, ai, si, ci;
  var j, aj, sj, cj;
  var p1, p2;

  var sphereColour = {r: 0.0, g: 0.0, b: 1.0};
  
  // Generate coordinates
  for (j = 0; j <= SPHERE_DIV; j++) {     //j represents moving from top to bottom
	texT = Math.round((1 - j / SPHERE_DIV) * 100) / 100;  
    aj = j * Math.PI / SPHERE_DIV;
    sj = Math.sin(aj);
    cj = Math.cos(aj);
    for (i = 0; i <= SPHERE_DIV; i++) {  //i represents the horizontal circles
      texS = Math.round(i / SPHERE_DIV * 100) / 100;
      ai = i * 2 * Math.PI / SPHERE_DIV;
      si = Math.sin(ai);
      ci = Math.cos(ai);

      vertices.push(si * sj);  // X
      vertices.push(cj);       // Y
      vertices.push(ci * sj);  // Z
	  
	  normals.push(si * sj);  // X
      normals.push(cj);       // Y
      normals.push(ci * sj);  // Z
	  
	  colors.push(sphereColour.r);		
	  colors.push(sphereColour.g);		
	  colors.push(sphereColour.b);		
	  
    }
  }

  // Generate indices
  for (j = 0; j < SPHERE_DIV; j++) {
    for (i = 0; i < SPHERE_DIV; i++) {
      p1 = j * (SPHERE_DIV+1) + i + 24;
      p2 = p1 + (SPHERE_DIV+1);

      indices.push(p1);
      indices.push(p2);
      indices.push(p1 + 1);

      indices.push(p1 + 1);
      indices.push(p2);
      indices.push(p2 + 1);
      //alert("" + p1 + "," + p2 + "," + (p1+1) + "   " + (p1+1) + "," + p2 + "," + (p2+1)) ;
	}
  }
  